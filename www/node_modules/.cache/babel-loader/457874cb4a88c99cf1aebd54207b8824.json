{"ast":null,"code":"var _jsxFileName = \"/Users/clairechen/react-flask-app/src/components/Auth/signup.js\";\n//import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\n\nconst Signup = () => {\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"auth\",\n    name: \"register\",\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"first\",\n    rules: [{\n      required: true,\n      message: 'Please input your first name!',\n      whitespace: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    autocomplete: \"username\",\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 56\n      }\n    }),\n    placeholder: \"First name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"last\",\n    rules: [{\n      required: true,\n      message: 'Please input your last name!',\n      whitespace: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    autocomplete: \"username\",\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 56\n      }\n    }),\n    placeholder: \"Last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not a valid email!'\n    }, {\n      required: true,\n      message: 'Please input your email!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }\n    }),\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    autocomplete: \"new-password\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 69\n      }\n    }),\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirm\",\n    dependencies: ['password'],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject('The two passwords that you entered do not match!');\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    autocomplete: \"new-password\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 69\n      }\n    }),\n    placeholder: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"agreement\",\n    valuePropName: \"checked\",\n    rules: [{\n      validator: (_, value) => value ? Promise.resolve() : Promise.reject('Should accept agreement')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"I have read the \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"agreement\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"signup-form-button\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Register\")));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/clairechen/react-flask-app/src/components/Auth/signup.js"],"names":["Form","Input","Button","Checkbox","UserOutlined","LockOutlined","MailOutlined","Signup","required","message","whitespace","type","getFieldValue","validator","rule","value","Promise","resolve","reject","_"],"mappings":"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","sourcesContent":["//import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\n\nconst Signup = () => {\n    return (\n        <Form\n            className=\"auth\"\n            name=\"register\"\n            scrollToFirstError\n        >\n            <Form.Item\n                name=\"first\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your first name!',\n                    whitespace: true,\n                },\n                ]}>\n                <Input autocomplete=\"username\" prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"First name\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"last\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your last name!',\n                    whitespace: true,\n                },\n                ]}>\n                <Input autocomplete=\"username\" prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Last name\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"email\"\n                rules={[\n                {\n                    type: 'email',\n                    message: 'The input is not a valid email!',\n                },\n                {\n                    required: true,\n                    message: 'Please input your email!',\n                },\n                ]}>\n                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"password\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n                ]}\n                hasFeedback\n            >\n                <Input.Password autocomplete=\"new-password\" prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"confirm\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                {\n                    required: true,\n                    message: 'Please confirm your password!',\n                },\n                ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                    if (!value || getFieldValue('password') === value) {\n                        return Promise.resolve();\n                    }\n\n                    return Promise.reject('The two passwords that you entered do not match!');\n                    },\n                }),\n                ]}>\n                <Input.Password autocomplete=\"new-password\" prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Confirm Password\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"agreement\"\n                valuePropName=\"checked\"\n                rules={[\n                {\n                    validator: (_, value) =>\n                    value ? Promise.resolve() : Promise.reject('Should accept agreement'),\n                },\n                ]}>\n                <Checkbox>\n                I have read the <a href=\"\">agreement</a>\n                </Checkbox>\n            </Form.Item>\n            <Form.Item>\n                <Button className=\"signup-form-button\" type=\"primary\" htmlType=\"submit\">\n                Register\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}