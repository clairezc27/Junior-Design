{"version":3,"sources":["components/Auth/login.js","components/Auth/signup.js","components/Common/header.js","components/Home/home.js","components/Common/box.js","components/Dashboard/dashboard.js","components/NewSearch/newsearch.js","components/Review/reviewExisting.js","App.js","serviceWorker.js","index.js"],"names":["Login","history","useHistory","className","name","initialValues","remember","onFinish","push","Item","rules","required","message","autocomplete","prefix","MailOutlined","placeholder","Password","LockOutlined","type","valuePropName","noStyle","href","htmlType","Signup","scrollToFirstError","whitespace","UserOutlined","hasFeedback","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","_","Header","Navbar","expand","sticky","bg","variant","Brand","style","fontSize","Provider","color","marginRight","Button","Home","paddingTop","flex","height","to","marginBottom","marginTop","Box","props","txt","Dashboard","margin","size","span","NewSearch","Nav","defaultActiveKey","Link","eventKey","ReviewExisting","App","useState","setCurrentTime","useEffect","fetch","then","res","json","data","time","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.874e0877.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { LockOutlined, MailOutlined } from '@ant-design/icons';\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n    const history = useHistory();\n    const submit = () => {\n        history.push('/dashboard');\n    }\n\n    return (\n        <Form\n            className=\"auth\"\n            name=\"normal_login\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={submit}\n        >\n            <Form.Item\n                name=\"email\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your email!',\n                },\n                ]}>\n                <Input\n                autocomplete=\"email\"\n                prefix={<MailOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Email\"\n                />\n            </Form.Item>\n\n            <Form.Item\n                name=\"password\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your Password!',\n                },\n                ]}\n                >\n                <Input.Password\n                    autocomplete=\"current-password\"\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n\n            <Form.Item>\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <a className=\"login-form-forgot\" href=\"\">\n                Forgot password\n                </a>\n            </Form.Item>\n\n            <Form.Item>\n                <Button\n                className=\"login-form-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                >\n                Log in\n                </Button>\n            </Form.Item>\n        </Form>\n  );\n}\n\nexport default Login;","import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\n\nconst Signup = () => {\n    return (\n        <Form\n            className=\"auth\"\n            name=\"register\"\n            scrollToFirstError\n        >\n            <Form.Item\n                name=\"first\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your first name!',\n                    whitespace: true,\n                },\n                ]}>\n                <Input autocomplete=\"username\" prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"First name\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"last\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your last name!',\n                    whitespace: true,\n                },\n                ]}>\n                <Input autocomplete=\"username\" prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Last name\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"email\"\n                rules={[\n                {\n                    type: 'email',\n                    message: 'The input is not a valid email!',\n                },\n                {\n                    required: true,\n                    message: 'Please input your email!',\n                },\n                ]}>\n                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"password\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n                ]}\n                hasFeedback\n            >\n                <Input.Password autocomplete=\"new-password\" prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"confirm\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                {\n                    required: true,\n                    message: 'Please confirm your password!',\n                },\n                ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                    if (!value || getFieldValue('password') === value) {\n                        return Promise.resolve();\n                    }\n\n                    return Promise.reject('The two passwords that you entered do not match!');\n                    },\n                }),\n                ]}>\n                <Input.Password autocomplete=\"new-password\" prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Confirm Password\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"agreement\"\n                valuePropName=\"checked\"\n                rules={[\n                {\n                    validator: (_, value) =>\n                    value ? Promise.resolve() : Promise.reject('Should accept agreement'),\n                },\n                ]}>\n                <Checkbox>\n                I have read the <a href=\"\">agreement</a>\n                </Checkbox>\n            </Form.Item>\n            <Form.Item>\n                <Button className=\"signup-form-button\" type=\"primary\" htmlType=\"submit\">\n                Register\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default Signup;","import React from 'react';\nimport { Navbar, Button } from 'react-bootstrap';\nimport { FaUser, FaFeatherAlt } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\n\nconst Header = () => {\n    return (\n        <Navbar expand=\"xl\" sticky=\"top\" bg=\"primary\" variant=\"dark\" className=\"justify-content-between\">\n            <Navbar.Brand href=\"/dashboard\" style={{ fontSize: \"36px\"}}>\n                <IconContext.Provider value={{ style: { fontSize: \"20px\", color: \"white\", marginRight: \"15px\" } }}>\n                    <FaFeatherAlt />\n                </IconContext.Provider>Don't fucking say bad shit on twitter\n            </Navbar.Brand>\n            <Button className=\"justify-content-end\">\n                <IconContext.Provider value={{ style: { fontSize: \"20px\" } }}>\n                    <FaUser />\n                </IconContext.Provider>\n            </Button>\n        </Navbar>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport { Row, Col, Divider } from 'antd';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Header from './../Common/header.js'\n\nconst Home = () => {\n    return (\n        <div className=\"Home\">\n           <Header />\n            <Row>\n                <Col style={{paddingTop: \"30px\"}} flex={1}>About\n                    <br />\n                    <p>blah blah blah</p>\n                </Col>\n                <Col style={{ height: \"70vh\" }}>\n                    <Divider type=\"vertical\" style={{height: \"100%\"}}/>\n                </Col>\n                <Col style={{paddingTop: \"30px\"}} flex={1}>\n                    <Link to=\"/signup\">\n                        <Button type=\"primary\" style={{ marginBottom: \"20px\" }}>Sign Up</Button>\n                    </Link>\n                    <br />\n                    <Link to=\"/login\">\n                        <Button type=\"primary\" style={{ marginTop: \"20px\" }}>Login</Button>\n                    </Link>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\n\nconst Box = (props) => {\n    return (\n        <div className=\"box\">\n            {props.txt}\n        </div>\n    );\n};\n\nexport default Box;","import React from 'react';\nimport { Row, Col } from 'antd';\nimport { Button } from 'react-bootstrap';\nimport Box from '../Common/box.js';\nimport Header from '../Common/header.js'\n\nconst Dashboard = () => {\n    return (\n        <div className=\"Home\">\n            <Header />\n            <Button style={{margin: \"20px 0px\"}} type=\"primary\" size=\"large\">New Search</Button>\n            <Row>\n                <Col span={8}>Searches</Col>\n                <Col span={8}>Twitter Handle</Col>\n                <Col span={8}>Status</Col>\n            </Row>\n            <Row>\n                <Col span={8}>\n                    <Box txt=\"9/1/2020\"/>\n                </Col>\n                <Col span={8}>\n                    <Box txt=\"@claire\"/>\n                </Col>\n                <Col span={8}>\n                    <Box txt=\"pending\"/>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={8}>\n                    <Box txt=\"8/27/2020\"/>\n                </Col>\n                <Col span={8}>\n                    <Box txt=\"@brett\"/>\n                </Col>\n                <Col span={8}>\n                    <Box txt=\"completed 8/31/2020\"/>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Dashboard;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport Header from './../Common/header.js'\n\nconst NewSearch = () => {\n    return (\n        <>\n        <Header />\n        <h1 className=\"Home-header\">New Search</h1>\n        <Nav variant=\"tabs\" defaultActiveKey=\"1\">\n            <Nav.Item>\n                <Nav.Link eventKey=\"1\">Step 1</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey=\"2\">Step 2</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey=\"3\">Step 3</Nav.Link>\n            </Nav.Item>\n        </Nav>\n        </>\n    );\n};\n\nexport default NewSearch;","import React from 'react';\nimport Header from './../Common/header.js'\n\nconst ReviewExisting = () => {\n    return (\n        <>\n        <Header />\n        <h1 className=\"Home-header\">Review Existing Search</h1>\n        <div className=\"review\">\n            <p>Review completed on: </p>\n            <p>Twitter handle: </p>\n            <p>Flagged posts: </p>\n        </div>\n        </>\n    );\n};\n\nexport default ReviewExisting;","import React, { useState, useEffect } from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './components/Auth/login';\nimport Signup from './components/Auth/signup';\nimport Home from './components/Home/home';\nimport Dashboard from './components/Dashboard/dashboard';\nimport NewSearch from './components/NewSearch/newsearch'\nimport ReviewExisting from './components/Review/reviewExisting';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nfunction App() {\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setCurrentTime(data.time);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <div>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login/\" component={Login} />\n              <Route exact path=\"/signup/\" component={Signup} />\n              <Route exact path=\"/dashboard/\" component={Dashboard} />\n              <Route exact path=\"/new-search/\" component={NewSearch} />\n              <Route exact path=\"/review-search/\" component={ReviewExisting} />\n            </Switch>\n          </div>\n        </Router>\n      </header>\n    </div>\n\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}